name: Semgrep CE Scan

on:
  push:
    branches: [main, master]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  semgrep:
    name: Scan
    runs-on: ubuntu-latest
    container:
      image: semgrep/semgrep:latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v5

      - name: Fetch Semgrep CE rules (fork)
        run: |
          echo "[INFO] Cloning Semgrep Community rule set"
          git clone --depth 1 https://github.com/stellar/semgrep-rules.git .semgrep-rules

      - name: Create .semgrepignore
        run: |
          echo "[INFO] Writing .semgrepignore"
          cat > .semgrepignore <<'EOF'
          :include .gitignore
          .semgrep-rules/.github/
          .semgrep-rules/.circleci/
          .semgrep-rules/.vscode/
          .semgrep-rules/docs/
          .semgrep-rules/stats/
          .semgrep-rules/tests/
          .semgrep-rules/development/
          .semgrep-rules/contrib/
          .semgrep-rules/**/*.md
          .semgrep-rules/**/*.rst
          .semgrep-rules/**/*.toml
          .semgrep-rules/**/*.ini
          .semgrep-rules/**/*.cfg
          !*.rule.yml
          node_modules/
          dist/
          build/
          venv/
          EOF

      - name: Filter non‑rule YAMLs
        run: |
          echo "[INFO] Filtering non‑rule YAMLs"
          find .semgrep-rules -type f \( -name '*.yml' -o -name '*.yaml' \) | while read -r f; do
            head -n 10 "$f" | grep -q '^[[:space:]]*rules:' || rm -f "$f"
          done

      - name: Run Semgrep scan
        run: |
          echo "[INFO] Running Semgrep analysis"
          semgrep scan \
            --config .semgrep-rules \
            --metrics=off \
            --quiet \
            --sarif-output semgrep-results.sarif \

      - name: Upload SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@v4
        with:
          sarif_file: semgrep-results.sarif
